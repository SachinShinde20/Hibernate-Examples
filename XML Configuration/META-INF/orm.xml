<?xml version="1.0" encoding="UTF-8"?>

<!-- Hibernate ORM mapping file using JPA XML format -->
<!-- Maps a Java class (Student) to a database table and its columns -->

<entity-mappings
    version="2.2"
    xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
                        http://xmlns.jcp.org/xml/ns/persistence/orm_2_2.xsd">

    <!-- Maps the Java class to a database table -->
    <entity class="com.HibernetExamples.Student" access="PROPERTY">
        <!-- access="PROPERTY" tells Hibernate to use getter/setter methods instead of direct field access -->

        <!-- Optional: Custom table name in the database -->
        <table name="Student_Records"/>

        <attributes>
            <!-- Primary key mapping -->
            <id name="id">
                <!-- Maps the property "id" to the column "Student_id" -->
                <column name="Student_id"/>
            </id>

            <!-- Other fields/properties mapping -->

            <basic name="name">
                <column name="Student_name"/>
            </basic>

            <basic name="course">
                <column name="Student_course"/>
            </basic>

            <basic name="city">
                <column name="Student_city"/>
            </basic>

            <basic name="mobileNo">
                <column name="Student_mobile_Number"/>
            </basic>
        </attributes>
    </entity>
</entity-mappings>



<!-- 
ðŸŒŸ Summary Notes on XML Mapping:

âœ” <entity> â†’ Maps Java class to a DB table
âœ” class â†’ Fully qualified class name (with package)
âœ” access="PROPERTY" â†’ Hibernate uses getter/setter methods instead of fields

âœ” <table name="..."/> â†’ Optional, only needed if table name â‰  class name

âœ” <attributes> â†’ Contains all property mappings (fields)

âœ” <id> â†’ Maps the primary key property
âœ” <basic> â†’ Maps a simple (non-primary) property
âœ” <column name="..."/> â†’ Maps Java property to DB column
     âž¤ Optional if property name = column name
     âž¤ Add constraints like:
         â€¢ nullable="false" â†’ NOT NULL
         â€¢ unique="true" â†’ UNIQUE
         â€¢ length="100" â†’ VARCHAR(100)
         â€¢ column-definition="varchar(50) default 'Unknown'" â†’ default value

âœ… Important:
âœ” If your table name = class name and column names = property names,
   then <table>, <basic>, and <column> tags are OPTIONAL!
   Hibernate will auto-map them by convention.

Example:
   public class Student {
       private int id;         // maps to column: id
       private String name;    // maps to column: name
   }

âœ” You still need <id> and <basic>, unless you use annotations.

 -->
